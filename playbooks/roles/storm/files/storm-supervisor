#!/bin/bash
#
# /etc/init.d/storm-supervisor
#
# Startup script for storm-supervisor
#
# chkconfig: 2345 20 80
# description: Starts and stops storm-supervisor
. /etc/init.d/functions
stormBin=/usr/bin/storm
stormSvc=$(echo $0 | cut -d'-' -f2)
desc="Storm $stormSvc daemon"
outFile="/var/log/storm/$stormSvc.out"
ppidFile="/var/run/storm/$stormSvc.ppid"

if ! [ -f $stormBin ]; then
  echo "storm binary not found."
  exit 5
fi

if [ -f /etc/sysconfig/storm ]; then
  . /etc/sysconfig/storm
fi

start() {
  echo "Starting $desc (storm-$stormSvc): "

  if [ -f $ppidFile ] ; then
     ppid=$(cat $ppidFile)
     if [ -n "$ppid" ] ; then
        pgrep -f storm -P $ppid >/dev/null 2>&1
        if [ $? -eq 0 ] ; then
           echo "storm-$stormSvc is already running."
           exit 3
        fi
     fi
  fi

  su - $stormUser -c "nohup ${stormBin} $stormSvc >>$outFile 2>&1 & echo \$! >$ppidFile"
  RETVAL=$?
  return $RETVAL
}

stop() {
  echo "Shutting down $desc (storm-$stormSvc): "
  if [ ! -f $ppidFile ] ; then
     echo "storm-${stormSvc} ppid file $ppidFile not exist."
     exit 3
  fi
  ppid=$(cat $ppidFile)
  if [ -z "$ppid" ] ; then
     echo "storm-${stormSvc} ppid file $ppidFile is empty."
     exit 3
  fi
  pid=$(pgrep -f storm -P $ppid)
  if [ $? != 0 ] ; then
     echo "storm-$stormSvc is not running."
     exit 3
  fi

  # kill supervisor process.
  pkill -U $stormUser -f storm -P $ppid
  RETVAL=$?
  if [ "$RETVAL" != "0" ] ; then
     echo "failed to stop storm-$stormSvc"
     return $RETVAL
  fi

  # kill worker processes.
  # This script assume workers.childopts includes "-Dproc_worker_" string.
  workers=$(pgrep -f '.*java .*-Dproc_worker_.*' -U $stormUser)
  RETVAL=$?
  if [ $RETVAL -eq 1 ] ; then
     # no worker
     exit 0
  fi

  if [ -n "$workers" ] ; then
     # kill shell bolt childs..
     for ppid in $workers; do
        pkill -KILL -U $stormUser -P $ppid
     done
     kill -KILL $workers
     RETVAL=$?
  fi
  return $RETVAL
}

restart() {
    stop
    start
}

status() {
  if [ -f $ppidFile ] ; then
     ppid=$(cat $ppidFile)
     if [ -n "$ppid" ] ; then
        pid=$(pgrep -f storm -P $ppid)
     fi
  fi
  pid=$(pgrep -f storm -P $ppid)

  # TODO:check if storm is in the process of starting

  if [ -z $pid ]; then
    echo "storm-$stormSvc is NOT running."
    exit 3
  else
    echo "storm-$stormSvc is running (pid is $pid)."
  fi

}

case "$1" in
  start)   start;;
  stop)    stop;;
  restart) restart;;
  status)  status;;
  *)       echo "Usage: $0 {start|stop|restart}"
           RETVAL=2;;
esac
exit $RETVAL


