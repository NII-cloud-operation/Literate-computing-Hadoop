<?xml version="1.0"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
-->
<configuration>

{% if kerberos_realm is defined %}
<property>
  <name>yarn.resourcemanager.keytab</name>
  <value>/etc/hadoop/conf/yarn.keytab</value>
</property>

<property>
  <name>yarn.resourcemanager.principal</name>
  <value>yarn/_HOST@{{ kerberos_realm }}</value>
</property>

<property>
  <name>yarn.nodemanager.keytab</name>
  <value>/etc/hadoop/conf/yarn.keytab</value>
</property>

<property>
  <name>yarn.nodemanager.principal</name>
  <value>yarn/_HOST@{{ kerberos_realm }}</value>
</property>

<property>
  <name>yarn.nodemanager.container-executor.class</name>
  <value>org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor</value>
</property>

<property>
  <name>yarn.nodemanager.linux-container-executor.group</name>
  <value>yarn</value>
</property>

<property>
  <name>yarn.http.policy</name>
  <value>HTTPS_ONLY</value>
</property>

{% for host in hadoop_resourcemanager_servers %}
<property>
  <name>yarn.resourcemanager.hostname.{{ host }}</name>
  <value>{{ host }}</value>
</property>
{% endfor %}
{% endif %}
{% if hadoop_resourcemanager_servers | length == 1 %}
<property>
  <name>yarn.resourcemanager.hostname</name>
  <value>{{ hadoop_resourcemanager_servers[0] }}</value>
</property>
{% endif %}

<property>
  <name>yarn.resourcemanager.cluster-id</name>
  <value>{{ yarn_rm_cluster_id }}</value>
</property>

{% if hadoop_resourcemanager_servers | length > 1 %}
<property>
  <name>yarn.resourcemanager.ha.enabled</name>
  <value>true</value>
</property>
{% endif %}

<property>
  <name>yarn.resourcemanager.ha.rm-ids</name>
  <value>{{ hadoop_resourcemanager_servers | join(',') }}</value>
</property>

{% for host in hadoop_resourcemanager_servers %}
<property>
  <name>yarn.resourcemanager.address.{{ host }}</name>
  <value>{{ host }}:{{ yarn_rm_rpc_port }}</value>
</property>
{% endfor %}

{% for host in hadoop_resourcemanager_servers %}
<property>
  <name>yarn.resourcemanager.scheduler.address.{{ host }}</name>
  <value>{{ host }}:{{ yarn_rm_scheduler_port }}</value>
</property>
{% endfor %}

{% for host in hadoop_resourcemanager_servers %}
<property>
  <name>yarn.resourcemanager.admin.address.{{ host }}</name>
  <value>{{ host }}:{{ yarn_rm_admin_port }}</value>
</property>
{% endfor %}

{% for host in hadoop_resourcemanager_servers %}
<property>
  <name>yarn.resourcemanager.resource-tracker.address.{{ host }}</name>
  <value>{{ host }}:{{ yarn_rm_resource_tracker_port }}</value>
</property>
{% endfor %}

{% for host in hadoop_resourcemanager_servers %}
<property>
  <name>yarn.resourcemanager.webapp.address.{{ host }}</name>
  <value>{{ host }}:{{ yarn_rm_webapp_port }}</value>
</property>
{% endfor %}

<property>
  <name>yarn.resourcemanager.nodes.include-path</name>
  <value>{{ hadoop_conf_dir }}/hosts.list</value>
</property>

<property>
  <name>yarn.resourcemanager.nodes.exclude-path</name>
  <value>{{ hadoop_conf_dir }}/hosts.exclude</value>
</property>

<property>
  <name>yarn.resourcemanager.recovery.enabled</name>
  <value>true</value>
</property>

<property>
  <name>yarn.resourcemanager.store.class</name>
  <value>org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore</value>
</property>

<property>
  <name>yarn.resourcemanager.zk-address</name>
  <value>{{ zookeeper_servers | join(':2181,') }}:2181</value>
</property>

<property>
  <name>yarn.resourcemanager.ha.automatic-failover.enabled</name>
  <value>true</value>
</property>

<property>
  <name>yarn.log-aggregation-enable</name>
  <value>true</value>
</property>

<property>
  <name>yarn.nodemanager.remote-app-log-dir</name>
  <value>hdfs://{{ dfs_nameservices }}{{ yarn_app_log_dir }}</value>
</property>

<property>
  <name>yarn.nodemanager.aux-services</name>
  <value>mapreduce_shuffle</value>
</property>

<property>
  <name>yarn.nodemanager.aux-services.mapreduce_shuffle.class</name>
  <value>org.apache.hadoop.mapred.ShuffleHandler</value>
</property>

<property>
  <name>yarn.application.classpath</name>
  <value>
     /usr/hdp/current/hadoop-client/*,/usr/hdp/current/hadoop-client/lib/*,
     /usr/hdp/current/hadoop-hdfs-client/*,/usr/hdp/current/hadoop-hdfs-client/lib/*,
     /usr/hdp/current/hadoop-mapreduce-client/*,/usr/hdp/current/hadoop-mapreduce-client/lib/*,
     /usr/hdp/current/hadoop-yarn-client/*,/usr/hdp/current/hadoop-yarn-client/lib/*,
     /etc/tez/conf,
     /usr/hdp/current/tez-client/*,user/hdp/current/tez-client/lib/*
  </value>
</property>

{% if hadoop_timelineservice_server is defined %}
{% if kerberos_realm is defined %}
<property>
  <name>yarn.timeline-service.keytab</name>
  <value>/etc/hadoop/conf/yarn.keytab</value>
</property>

<property>
  <name>yarn.timeline-service.principal</name>
  <value>yarn/_HOST@{{ kerberos_realm }}</value>
</property>

<property>
  <name>yarn.timeline-service.http-authentication.type</name>
  <value>kerberos</value>
</property>

<property>
  <name>yarn.timeline-service.http-authentication.kerberos.keytab</name>
  <value>/etc/hadoop/conf/yarn.keytab</value>
</property>

<property>
  <name>yarn.timeline-service.http-authentication.kerberos.principal</name>
  <value>HTTP/_HOST@{{ kerberos_realm }}</value>
</property>
{% endif %}

<property>
  <name>yarn.timeline-service.enabled</name>
  <value>true</value>
</property>

<property>
  <name>yarn.timeline-service.hostname</name>
  <value>{{ hadoop_timelineservice_server }}</value>
</property>

<property>
  <name>yarn.timeline-service.http-cross-origin.enabled</name>
  <value>true</value>
</property>

<property>
  <name>yarn.resourcemanager.system-metrics-publisher.enabled</name>
  <value>true</value>
</property>
{% else %}
<property>
  <name>yarn.timeline-service.enabled</name>
  <value>false</value>
</property>
{% endif %}

{% if yarn_nodemanager_delete_debug_delay_sec is defined %}
<property>
  <name>yarn.nodemanager.delete.debug-delay-sec</name>
  <value>{{ yarn_nodemanager_delete_debug_delay_sec }}</value>
</property>
{% endif %}

{% if yarn_nodemanager_resource_cpu_vcores is defined %}
<property>
  <name>yarn.nodemanager.resource.cpu-vcores</name>
  <value>{{ yarn_nodemanager_resource_cpu_vcores }}</value>
</property>
{% endif %}

{% if yarn_nodemanager_resource_memory_mb is defined %}
<property>
  <name>yarn.nodemanager.resource.memory-mb</name>
  <value>{{ yarn_nodemanager_resource_memory_mb }}</value>
</property>
{% endif %}

{% if yarn_nodemanager_localizer_cache_target_size_mb is defined %}
<property>
  <name>yarn.nodemanager.localizer.cache.target-size-mb</name>
  <value>{{ yarn_nodemanager_localizer_cache_target_size_mb }}</value>
</property>
{% endif %}

<!-- following parameters are for NodeManager Restart feature. -->

<property>
  <name>yarn.nodemanager.recovery.enabled</name>
  <value>true</value>
</property>

<property>
  <name>yarn.nodemanager.recovery.dir</name>
  <value>${hadoop.tmp.dir}/yarn-nm-recovery</value>
</property>

<property>
  <name>yarn.nodemanager.address</name>
  <value>0.0.0.0:45454</value>
</property>

</configuration>
